<!---_CreateOrUpdate--->
@using App.Domain.Common
@using App.Framework.Ultis
@using Resources
@using App.Service.Static
@using App.Service.Language
@model App.FakeEntity.GenericControl.GenericControlViewModel

<div class="form-horizontal">
    <div class="form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-offset-3" })
        <div class="form-group">
            @Html.LabelFor(model => model.EntityId, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.EntityId, new SelectList(new List<SelectListItem>
               {
                   new SelectListItem { Text = "ContactInformation", Value="1"
                   },new SelectListItem { Text = "MenuLink", Value="2"}

                 }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenericControlName, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GenericControlName, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.GenericControlName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenericControlName, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDisplay, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.OrderDisplay, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderDisplay, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 10 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Enable, new { @checked = "checked" }) @UI.Active
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Disable) @UI.InActive
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "help-block" })
            </div>
        </div>
    </div>
</div>
<!---/_CreateOrUpdate--->