<!---_CreateOrUpdate--->
@using App.Domain.Common
@using App.Framework.Ultis
@using Resources
@using App.Service.Static
@using App.Service.Language
@model App.FakeEntity.GenericControl.GenericControlViewModel

<div class="form-horizontal">
    <div class="form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-offset-3" })

        <div class="tabbable-line m-heading-1 border-green m-bordered dashboard-stat grey">
            <ul class="nav nav-tabs ">
                @{
                    for (int i = 0; i < Model.Locales.Count; i++)
                    {
                        App.Domain.Entities.Language.Language language = DependencyResolver.Current.GetService<ILanguageService>().GetLanguageById(Model.Locales[i].LanguageId);

                        <li class="@(i == 0 ? "active" : "")">
                            <a href="#tab_@(i + 1)" data-toggle="tab"><img src="@language.Flag" /> @language.LanguageName</a>
                        </li>
                    }
                }
            </ul>
            <div class="tab-content">
                @{
                    for (int i = 0; i < Model.Locales.Count; i++)
                    {
                        <div class="tab-pane @(i == 0 ? "active" : "")" id="tab_@(i+1)">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Locales[i].Name, new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(model => model.Locales[i].Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Locales[i].Name, "", new { @class = "help-block" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Locales[i].Description, new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.TextAreaFor(model => model.Locales[i].Description, new { @class = "form-control", @rows = 10 })
                                    @Html.ValidationMessageFor(model => model.Locales[i].Description, "", new { @class = "help-block" })
                                </div>
                            </div>
                            
                        </div>

                        @Html.HiddenFor(model => model.Locales[i].LocalesId)
                        @Html.HiddenFor(model => model.Locales[i].LanguageId)
                    }
                    @Html.HiddenFor(model => model.Name, new { @class = "form-control", @Value = Model.Locales[0].Name })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntityId, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.EntityId, new SelectList(new List<SelectListItem>
               {
                   new SelectListItem { Text = "ContactInformation", Value="2"
                   },new SelectListItem { Text = "MenuLink", Value="1"}

                 }, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EntityId, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDisplay, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.OrderDisplay, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderDisplay, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Enable, new { @checked = "checked" }) @UI.Active
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Disable) @UI.InActive
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "help-block" })
            </div>
        </div>
    </div>
</div>
<!---/_CreateOrUpdate--->