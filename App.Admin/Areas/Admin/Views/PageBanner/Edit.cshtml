@using App.Domain.Common
@using Resources
@model App.FakeEntity.Ads.PageBannerViewModel
@{
    ViewBag.Title = UI.CreateNew;
    ViewBag.Toolbar = new[] { "Save", "SaveNew", "Divider", "Back" };
}

@using (Html.BeginForm("Edit", "PageBanner", FormMethod.Post, new { data_container = @ViewContext.RouteData.Values["controller"], @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x=>x.Id)
    <div class="form-horizontal">
        <div class="form-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-offset-3" })
            <div class="form-group">
                @Html.LabelFor(model => model.PageName, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.PageName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PageName, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrderDisplay, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.OrderDisplay, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OrderDisplay, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Position, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="radio-list">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int) Position.Top) @Position.Top.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.Middle) @Position.Middle.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int) Position.Footer) @Position.Footer.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.Bottom) @Position.Bottom.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.SiderBar) @Position.SiderBar.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.Right) @Position.Right.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.Left) @Position.Left.ToString()
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Position, (int)Position.HomeProduct) @Position.HomeProduct.ToString()
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    <div class="radio-list">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Status, (int)Status.Enable) @UI.Active
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.Status, (int)Status.Disable) @UI.InActive
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "help-block" })
                </div>
            </div>
        </div>
    </div>
} 
