@using App.Domain.Common
@using Resources
@model App.FakeEntity.ServerMail.ServerMailSettingViewModel
@{
    ViewBag.Title = UI.CreateNew;
    ViewBag.Toolbar = new[] { "Save", "SaveNew", "Divider", "Back" };
}
@using (Html.BeginForm("Create", "MailSetting", FormMethod.Post, new { data_container = ViewContext.RouteData.Values["controller"], enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-offset-3" })
            <div class="form-group">
                @Html.LabelFor(model => model.FromAddress, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.FromAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FromAddress, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.UserId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SmtpClient, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.SmtpClient, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SmtpClient, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SMTPPort, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.SMTPPort, new { @class = "form-control", value = "0" })
                    @Html.ValidationMessageFor(model => model.SMTPPort, "", new { @class = "help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EnableSSL, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    <label class="checkbox-inline">
                        @Html.CheckBoxFor(model => model.EnableSSL, new { @class = "" })
                    </label>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.DropDownList("Status", new List<SelectListItem>
                    {
                        new SelectListItem {Text = UI.Active, Value = ((int)Status.Enable).ToString()},
                        new SelectListItem {Text = UI.InActive, Value = ((int)Status.Disable).ToString()}
                    }, new { @class = "form-control", id = "Status", name = "Status" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "help-block" })
                </div>
            </div>
        </div>
    </div>
}


