<!---_CreateOrUpdate--->
@using App.Domain.Common
@using App.Framework.Ultis
@using Resources
@using App.Service.Static
@using App.Service.Language
@model App.FakeEntity.News.NewsViewModel

<div class="form-horizontal">
    <div class="form-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger col-md-offset-3" })

        <div class="tabbable-line m-heading-1 border-green m-bordered dashboard-stat grey">
            <ul class="nav nav-tabs ">
                @{
                    for (int i = 0; i < Model.Locales.Count; i++)
                    {
                        App.Domain.Entities.Language.Language language = DependencyResolver.Current.GetService<ILanguageService>().GetLanguageById(Model.Locales[i].LanguageId);

                        <li class="@(i == 0 ? "active" : "")">
                            <a href="#tab_@(i + 1)" data-toggle="tab"><img src="@language.Flag" /> @language.LanguageName</a>
                        </li>
                    }
                }
            </ul>

            <div class="tab-content">
                @{
                    for (int i = 0; i < Model.Locales.Count; i++)
                    {
                        <div class="tab-pane @(i == 0 ? "active" : "")" id="tab_@(i+1)">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Locales[i].Title, new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(model => model.Locales[i].Title, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Locales[i].Title, "", new { @class = "help-block" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Locales[i].ShortDesc, new { @class = "control-label col-md-3" })
                                <div class="col-md-5">
                                    @Html.TextAreaFor(model => model.Locales[i].ShortDesc, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Locales[i].ShortDesc, "", new { @class = "help-block" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Locales[i].Description, new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Locales[i].Description, new { @class = "form-control ckeditor" })
                                    @Html.ValidationMessageFor(model => model.Locales[i].Description, "", new { @class = "help-block" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Locales[i].MetaTitle, new { @class = "control-label col-md-3" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.Locales[i].MetaTitle, new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.Locales[i].MetaTitle, "", new { @class = "help-block" })*@
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Locales[i].MetaKeywords, new { @class = "control-label col-md-3" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.Locales[i].MetaKeywords, new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.Locales[i].MetaKeywords, "", new { @class = "help-block" })*@
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Locales[i].MetaDescription, new { @class = "control-label col-md-3" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(model => model.Locales[i].MetaDescription, new { @class = "form-control" })
                                        @*@Html.ValidationMessageFor(model => model.Locales[i].MetaDescription, "", new { @class = "help-block" })*@
                                    </div>
                                </div>
                            </div>

                        </div>

                        @Html.HiddenFor(model => model.Locales[i].LocalesId)
                        @Html.HiddenFor(model => model.Locales[i].LanguageId)
                    }

                    @Html.HiddenFor(model => model.Title, new { @class = "form-control", @Value = Model.Locales[0].Title })
                    @Html.HiddenFor(model => model.MetaTitle, new { @class = "form-control", @Value = Model.Locales[0].MetaTitle })
                    @Html.HiddenFor(model => model.MetaKeywords, new { @class = "form-control", @Value = Model.Locales[0].MetaKeywords })
                    @Html.HiddenFor(model => model.MetaDescription, new { @class = "form-control", @Value = Model.Locales[0].MetaDescription })
                }

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuId, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.DropDownListFor(x => x.MenuId, new SelectList(ViewBag.MenuList, "Id", "MenuName"), "--Select--", new { @class = "form-control  select2" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDisplay, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.OrderDisplay, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrderDisplay, "", new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <div class="fileinput fileinput-new" data-provides="fileinput">
                    <div class="input-group input-large">
                        <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                            <i class="fa fa-file fileinput-exists"></i>&nbsp;
                            <span class="fileinput-filename"> </span>
                        </div>
                        <span class="input-group-addon btn default btn-file">
                            <span class="fileinput-new">@Resources.FormUI.SelectFile</span>
                            <span class="fileinput-exists"> @Resources.FormUI.ChangeFile </span>
                            @Html.TextBoxFor(model => model.Image, new { @type = "file" })
                            @*<input type="file" name="FileUpload" />*@
                        </span>
                        <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Remove </a>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(FormUI.OptionDisplay, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <div class="checkbox-list">
                    <label>
                        @Html.CheckBoxFor(x => x.SpecialDisplay) @FormUI.SpecialDisplay
                    </label>
                    <label>
                        @Html.CheckBoxFor(x => x.HomeDisplay) @FormUI.HomeDisplay
                    </label>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                <div class="radio-list">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Enable, new { @checked = "checked" }) @UI.Active
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(x => x.Status, (int)Status.Disable) @UI.InActive
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "help-block" })
            </div>
        </div>

    </div>
</div>



<!---/_CreateOrUpdate--->