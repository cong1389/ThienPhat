$(function () {
    var items = $(".attr-items #color_item").length;
    $(".attr-items #color_item").each(function (index, e) { 
            if (index >= 10) { 
                $(".attr-items #color_item").eq(index).hide();
                $("#showmore").show();
            }
             
        });
    $("#showmore").click(function () {
        $(".attr-items #color_item")
       .each(function (index, e) {
           if (index >= 10) {
               $(".attr-items #color_item").eq(index).toggle();
           }
       });
    })

    $('#block-slider').slider().on('slideStop', function (ev) {
        ev.preventDefault();
        $("#from-price").val($(this).data('slider').getValue().toString().split(',')[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1."));
        $("#to-price").val($(this).data('slider').getValue().toString().split(',')[1].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1."));
        $("#price").val($(this).data('slider').getValue().toString());
        $("#content-ajax").addClass("ajax-loading");
        var value = $("#price").val();
        var data = {
            price: value
        };
        var value = $("#price").val();
        var data = {
            price: value
        };
        range.getcontent(data, ev, "price", value);
    });
    
    $(".box-search .item input")
      .click(function () {
         // $(".conten-attr .item input").parents(".item").removeClass("active");
          //$(".conten-attr .item input").removeAttr('checked');
          $(this).parents(".item").toggleClass("active"); 
          if ($(this).is(":checked")) {
              $(this).attr('checked', 'checked'); 
          } else {
              $(this).removeAttr('checked');
          }
      });
    $(document).on('change', 'input[name=attr]', function (e) {
        e.preventDefault();
        $("#content-ajax").addClass("ajax-loading");
        getValuesChecbox();
        var value = getValuesChecbox();
        $("#attribute").val(getValuesChecbox().toString());
        var data = {
            attribute: value
        }
        range.getcontent(data, e, "attribute", value);
    });
    $(document).on('change', 'input[name=pro-attr]', function (e) {
        e.preventDefault();
        $("#content-ajax").addClass("ajax-loading");
        getValuesChecbox();
        var value = getProValuesChecbox();
        $("#proattribute").val(getProValuesChecbox().toString());
        var data = {
            proattribute: value
        }
        range.getcontent(data, e, "proattribute", value);
    });
    $(document).on("change", "#pagesortlist", function (e) {
        e.preventDefault();
        $("#content-ajax").addClass("ajax-loading");
        var value = $(this).val();
        var data = {
            SortOrder: value
        }
        range.getcontent(data, e, "SortOrder", value);
    });
    $(document).on("change", "#pagesizelist", function (e) {
        e.preventDefault();
        $("#content-ajax").addClass("ajax-loading");
        var value = $(this).val();
        var data = {
            pageSize: value
        }
        range.getcontent(data, e, "pageSize", value);
    });
    //$(document).on("click", "ul.pagination > li > a", function (e) {
    //    e.preventDefault();
    //    $("#content-ajax").addClass("ajax-loading");
    //    var value = $(this).attr("data-pager");
    //    if (value != '' && value != 'undefined') var data = {
    //        currPage: value
    //    }
    //    range.getcontent(data, e, "currPage", value);
    //});
});
var range = {
    'getcontent': function (data, e, key, value) {
        var cUrl = UrlAddress(key, value);
        window.location.href = cUrl;
        //jQuery.get(AjaxUrlAddress(key, value, '/filter.html'), function (result) {
        //    $("#content-ajax").removeClass("ajax-loading")
        //    jQuery(".block-items").empty();
        //    jQuery(".block-items").prepend(result);
        //    window.history.pushState("", "", cUrl);
        //    window.addEventListener('popstate',
        //        function (e) {
        //          console.log(e.state);
        //        })
        //    $('html, body').animate({
        //        scrollTop: $("#content-ajax").offset().top
        //    }, 1000);
        //}, "json").fail(function () {
        //    $("#content-ajax").removeClass("ajax-loading")
        //});
    }
}
 
function UrlAddress(param, paramVal) {
    var url = document.URL;
    var parts = url.split('?');
    var baseUrl = parts[0];
    var oldQueryString = parts[1];
    var newParameters = [];
    if (oldQueryString) {
        var oldParameters = oldQueryString.split('&');
        for (var i = 0; i < oldParameters.length; i++) {
            if (oldParameters[i].split('=')[0] != param) {
                if (oldParameters[i].split('=')[0] == 'currPage' && param != 'currPage') {
                    oldParameters[i].split('=')[0].slice(oldParameters[i], i)
                    newParameters.push('currPage=1');
                } else {
                    newParameters.push(oldParameters[i]);
                }
            }
        }
    }
    if (paramVal !== '' && paramVal !== null && typeof paramVal !== 'undefined' && paramVal.length>0) {
        newParameters.push(param + '=' + encodeURI(paramVal));
    }
    if (newParameters.length > 0) {
        return baseUrl + '?' + newParameters.join('&');
    } else {
        return baseUrl;
    }
}

function getValuesChecbox() {
    var boxes = $('input[name=attr]:checked');
    var boxesValue = [];
    $(boxes).each(function () {
        boxesValue.push($(this).attr("id"));
    });
    var str = boxesValue.toString();
    $("#attribute").val(str);
    return boxesValue;
   
}
function getProValuesChecbox() {
    var boxes = $('input[name=pro-attr]:checked');
    var boxesValue = [];
    $(boxes).each(function () {
        boxesValue.push($(this).attr("id"));
    });
    var str = boxesValue.toString();
    $("#proattribute").val(str);
    return boxesValue;
   
}

(function (history) {
    var pushState = history.pushState;
    history.pushState = function (state) {
        if (typeof history.onpushstate == "function") {
            history.onpushstate({ state: state });
        }
        // ... whatever else you want to do
        // maybe call onhashchange e.handler
        return pushState.apply(history, arguments);
    }
})(window.history);